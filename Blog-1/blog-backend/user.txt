// app.post("/auth/login", registerValidation, async (req, res) => {
//     try{
//         const user = await UserModel.findOne({ email: req.body.email });

//         if (!user) {
//             return req.status(404).json({
//                 message: 'Пользователь не найден',
//             })
//         }

//         const isValidPass = await bcrypt.compare(req.body.password, user._doc.passwordHash)

//         if (!isValidPass) {
//             return req.status(404).json({
//                 message: 'Неверный логин или пароль',
//             })
//         }

//         const token = jwt.sign(
//             {
//               _id: user._id,
//             },
//             'secret123',
//             {
//               expiresIn: '30d',
//             }
//         );

//         const {passwordHash, ...userData } = user._doc;

//         res.json({
//             ...userData,
//             token,
//         });
//     } catch (err) {
//         res.status(500).json({
//             message: "Не удалось авторизоваться",
//         });
//     }
// });
